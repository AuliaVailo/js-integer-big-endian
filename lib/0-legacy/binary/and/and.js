"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.and = and;
exports.band_t = band_t;

/**
 *
 * BINARY and APPLIED ON a AND b
 *
 * Meaningful only when r is a power of 2.
 *
 * |a| = |b| = |c| > 0
 *
 *
 */

function and(a, a0, b, b0, c, c0, c1) {

  while (c0 < c1) {
    c[c0++] = a[a0++] & b[b0++];
  }
}

/**
 * BIG ENDIAN BINARY and APPLIED ON a AND b
 *
 * Meaningful only when r is a power of 2.
 *
 * |a| >= |b| > 0
 *
 * treats b as if it was represented with the same number of blocks as a
 */

function band_t(r) {

  var _r = r / 2;

  return function (a, a0, a1, b, b0, b1, c, c0, c1) {

    var at = a1 - b1 + b0;
    var ct = c0 + at - a0;

    if (b[b0] < _r) while (c0 < ct) {
      c[c0++] = 0;
    } else while (c0 < ct) {
      c[c0++] = a[a0++];
    }while (c0 < c1) {
      c[c0++] = a[at++] & b[b0++];
    }
  };
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3NyYy8wLWxlZ2FjeS9iaW5hcnkvYW5kL2FuZC5qcyJdLCJuYW1lcyI6WyJhbmQiLCJiYW5kX3QiLCJhIiwiYTAiLCJiIiwiYjAiLCJjIiwiYzAiLCJjMSIsInIiLCJfciIsImExIiwiYjEiLCJhdCIsImN0Il0sIm1hcHBpbmdzIjoiOzs7OztRQVlnQkEsRyxHQUFBQSxHO1FBaUJBQyxNLEdBQUFBLE07O0FBNUJoQjs7Ozs7Ozs7Ozs7QUFXTyxTQUFTRCxHQUFULENBQWNFLENBQWQsRUFBaUJDLEVBQWpCLEVBQXFCQyxDQUFyQixFQUF3QkMsRUFBeEIsRUFBNEJDLENBQTVCLEVBQStCQyxFQUEvQixFQUFtQ0MsRUFBbkMsRUFBdUM7O0FBRTdDLFNBQU9ELEtBQUtDLEVBQVo7QUFBZ0JGLE1BQUVDLElBQUYsSUFBVUwsRUFBRUMsSUFBRixJQUFVQyxFQUFFQyxJQUFGLENBQXBCO0FBQWhCO0FBRUE7O0FBR0Q7Ozs7Ozs7Ozs7QUFVTyxTQUFTSixNQUFULENBQWlCUSxDQUFqQixFQUFtQjs7QUFFekIsTUFBSUMsS0FBS0QsSUFBSSxDQUFiOztBQUVBLFNBQU8sVUFBVVAsQ0FBVixFQUFhQyxFQUFiLEVBQWlCUSxFQUFqQixFQUFxQlAsQ0FBckIsRUFBd0JDLEVBQXhCLEVBQTRCTyxFQUE1QixFQUFnQ04sQ0FBaEMsRUFBbUNDLEVBQW5DLEVBQXVDQyxFQUF2QyxFQUEyQzs7QUFFakQsUUFBSUssS0FBS0YsS0FBS0MsRUFBTCxHQUFVUCxFQUFuQjtBQUNBLFFBQUlTLEtBQUtQLEtBQUtNLEVBQUwsR0FBVVYsRUFBbkI7O0FBRUEsUUFBSUMsRUFBRUMsRUFBRixJQUFRSyxFQUFaLEVBQWdCLE9BQU9ILEtBQUtPLEVBQVo7QUFBZ0JSLFFBQUVDLElBQUYsSUFBVSxDQUFWO0FBQWhCLEtBQWhCLE1BQ2dCLE9BQU9BLEtBQUtPLEVBQVo7QUFBZ0JSLFFBQUVDLElBQUYsSUFBVUwsRUFBRUMsSUFBRixDQUFWO0FBQWhCLEtBRWhCLE9BQU9JLEtBQUtDLEVBQVo7QUFBZ0JGLFFBQUVDLElBQUYsSUFBVUwsRUFBRVcsSUFBRixJQUFVVCxFQUFFQyxJQUFGLENBQXBCO0FBQWhCO0FBRUEsR0FWRDtBQVlBIiwiZmlsZSI6ImFuZC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLyoqXG4gKlxuICogQklOQVJZIGFuZCBBUFBMSUVEIE9OIGEgQU5EIGJcbiAqXG4gKiBNZWFuaW5nZnVsIG9ubHkgd2hlbiByIGlzIGEgcG93ZXIgb2YgMi5cbiAqXG4gKiB8YXwgPSB8YnwgPSB8Y3wgPiAwXG4gKlxuICpcbiAqL1xuXG5leHBvcnQgZnVuY3Rpb24gYW5kIChhLCBhMCwgYiwgYjAsIGMsIGMwLCBjMSkge1xuXG5cdHdoaWxlIChjMCA8IGMxKSBjW2MwKytdID0gYVthMCsrXSAmIGJbYjArK107XG5cbn1cblxuXG4vKipcbiAqIEJJRyBFTkRJQU4gQklOQVJZIGFuZCBBUFBMSUVEIE9OIGEgQU5EIGJcbiAqXG4gKiBNZWFuaW5nZnVsIG9ubHkgd2hlbiByIGlzIGEgcG93ZXIgb2YgMi5cbiAqXG4gKiB8YXwgPj0gfGJ8ID4gMFxuICpcbiAqIHRyZWF0cyBiIGFzIGlmIGl0IHdhcyByZXByZXNlbnRlZCB3aXRoIHRoZSBzYW1lIG51bWJlciBvZiBibG9ja3MgYXMgYVxuICovXG5cbmV4cG9ydCBmdW5jdGlvbiBiYW5kX3QgKHIpe1xuXG5cdHZhciBfciA9IHIgLyAyO1xuXG5cdHJldHVybiBmdW5jdGlvbiAoYSwgYTAsIGExLCBiLCBiMCwgYjEsIGMsIGMwLCBjMSkge1xuXG5cdFx0dmFyIGF0ID0gYTEgLSBiMSArIGIwO1xuXHRcdHZhciBjdCA9IGMwICsgYXQgLSBhMDtcblxuXHRcdGlmIChiW2IwXSA8IF9yKSB3aGlsZSAoYzAgPCBjdCkgY1tjMCsrXSA9IDA7XG5cdFx0ZWxzZSAgICAgICAgICAgIHdoaWxlIChjMCA8IGN0KSBjW2MwKytdID0gYVthMCsrXTtcblxuXHRcdHdoaWxlIChjMCA8IGMxKSBjW2MwKytdID0gYVthdCsrXSAmIGJbYjArK107XG5cblx0fTtcblxufVxuIl19